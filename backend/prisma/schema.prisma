// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id      Int    @id @default(autoincrement())
  address String @unique
  tasks   Task[]
}

model Worker {
  id            Int          @id @default(autoincrement())
  address       String       @unique
  submissions   Submission[]
  pendingAmount String
  lockedAmount  String
}

model Task {
  id          Int          @id @default(autoincrement())
  title       String       @default("Select the most appropriate image")
  signature   String
  amount      String
  options     Option[]
  userId      Int 
  user        User         @relation(fields: [userId], references: [id])
  submissions Submission[]
}

model Option {
  id          Int          @id @default(autoincrement())
  imageUrl    String
  taskId      Int
  task        Task         @relation(fields: [taskId], references: [id])
  submissions Submission[]
}

model Submission {
  id       Int    @id @default(autoincrement())
  workerId Int
  worker   Worker @relation(fields: [workerId], references: [id])
  optionId Int
  option   Option @relation(fields: [optionId], references: [id])
  taskId   Int
  task     Task   @relation(fields: [taskId], references: [id])
  amount   String
}

model SubmissionCache {
  id      Int @id @default(autoincrement())
  taskId  Int
  option1 Int
  option2 Int
  option3 Int
  option4 Int
}   
